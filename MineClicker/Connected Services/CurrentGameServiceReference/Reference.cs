//------------------------------------------------------------------------------
// <auto-generated>
//     Este código fue generado por una herramienta.
//     Versión de runtime:4.0.30319.42000
//
//     Los cambios en este archivo podrían causar un comportamiento incorrecto y se perderán si
//     se vuelve a generar el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace MineClicker.CurrentGameServiceReference {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="CurrentGameServiceReference.ICurrentGameService", CallbackContract=typeof(MineClicker.CurrentGameServiceReference.ICurrentGameServiceCallback))]
    public interface ICurrentGameService {
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/ICurrentGameService/StartGame")]
        void StartGame(string gameGUID);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/ICurrentGameService/StartGame")]
        System.Threading.Tasks.Task StartGameAsync(string gameGUID);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/ICurrentGameService/SetPlayerInWaitingQueue")]
        void SetPlayerInWaitingQueue(int playerID);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/ICurrentGameService/SetPlayerInWaitingQueue")]
        System.Threading.Tasks.Task SetPlayerInWaitingQueueAsync(int playerID);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/ICurrentGameService/SendDestroyedBlocks")]
        void SendDestroyedBlocks(WCFServices.Models.Block[] destroyedBlocks, string guid, int playerID);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/ICurrentGameService/SendDestroyedBlocks")]
        System.Threading.Tasks.Task SendDestroyedBlocksAsync(WCFServices.Models.Block[] destroyedBlocks, string guid, int playerID);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ICurrentGameServiceCallback {
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/ICurrentGameService/StartGameCallback")]
        void StartGameCallback(string gameGUID);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/ICurrentGameService/EndGame")]
        void EndGame(string playerWinnerUsername);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ICurrentGameServiceChannel : MineClicker.CurrentGameServiceReference.ICurrentGameService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class CurrentGameServiceClient : System.ServiceModel.DuplexClientBase<MineClicker.CurrentGameServiceReference.ICurrentGameService>, MineClicker.CurrentGameServiceReference.ICurrentGameService {
        
        public CurrentGameServiceClient(System.ServiceModel.InstanceContext callbackInstance) : 
                base(callbackInstance) {
        }
        
        public CurrentGameServiceClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName) : 
                base(callbackInstance, endpointConfigurationName) {
        }
        
        public CurrentGameServiceClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName, string remoteAddress) : 
                base(callbackInstance, endpointConfigurationName, remoteAddress) {
        }
        
        public CurrentGameServiceClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(callbackInstance, endpointConfigurationName, remoteAddress) {
        }
        
        public CurrentGameServiceClient(System.ServiceModel.InstanceContext callbackInstance, System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(callbackInstance, binding, remoteAddress) {
        }
        
        public void StartGame(string gameGUID) {
            base.Channel.StartGame(gameGUID);
        }
        
        public System.Threading.Tasks.Task StartGameAsync(string gameGUID) {
            return base.Channel.StartGameAsync(gameGUID);
        }
        
        public void SetPlayerInWaitingQueue(int playerID) {
            base.Channel.SetPlayerInWaitingQueue(playerID);
        }
        
        public System.Threading.Tasks.Task SetPlayerInWaitingQueueAsync(int playerID) {
            return base.Channel.SetPlayerInWaitingQueueAsync(playerID);
        }
        
        public void SendDestroyedBlocks(WCFServices.Models.Block[] destroyedBlocks, string guid, int playerID) {
            base.Channel.SendDestroyedBlocks(destroyedBlocks, guid, playerID);
        }
        
        public System.Threading.Tasks.Task SendDestroyedBlocksAsync(WCFServices.Models.Block[] destroyedBlocks, string guid, int playerID) {
            return base.Channel.SendDestroyedBlocksAsync(destroyedBlocks, guid, playerID);
        }
    }
}
